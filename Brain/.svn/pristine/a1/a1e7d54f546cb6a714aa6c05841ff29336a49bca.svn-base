package kr.co.tiein.elever
{
	import flash.events.Event;
	import flash.events.IOErrorEvent;
	import flash.net.URLLoader;
	import flash.net.URLLoaderDataFormat;
	import flash.net.URLRequest;
	import flash.net.URLRequestMethod;
	import flash.net.URLVariables;

	public class HTTPUtil
	{
		private var _basePath:String;
		public function get BasePath():String{ return _basePath; }
		
		private var _urlLoader:URLLoader
		
		private var _path:Vector.<String>;
		private var _params:Vector.<URLVariables>;
		private var _callback:Vector.<Function>;
		
		private var _currentParams:URLVariables;
		
		private var _isBusy:Boolean;
		
		public function get CurrentParameters():URLVariables{ return _currentParams; }
		
		public function HTTPUtil(basePath:String)
		{
			_path=new Vector.<String>;
			_params=new Vector.<URLVariables>;
			_callback=new Vector.<Function>;
			
			_basePath=basePath;
			
			_urlLoader=new URLLoader;
			_urlLoader.addEventListener(Event.COMPLETE, onComplete);
			_urlLoader.addEventListener(IOErrorEvent.IO_ERROR, onError);
			
			_isBusy=false;
		}
		
		public function post(path:String,params:URLVariables,callback:Function):void{
			_path[_path.length]=_basePath+path;
			_callback[_callback.length]=callback;
			_params[_params.length]=params;
			
			next();
		}
		
		private function next():void{
			if(_isBusy || _path.length==0) return;
			
			var urlReq:URLRequest=new URLRequest;
			
			urlReq.url=_path[0];
			urlReq.method = URLRequestMethod.POST;
			
			_currentParams=_params[0];
			urlReq.data=_currentParams;
			
			_urlLoader.dataFormat = URLLoaderDataFormat.TEXT;
			_urlLoader.load(urlReq);
		}
		
		private function onComplete(e:Event):void{
			_isBusy=false;
			
			if(_callback!=null){
				var urlLoader:URLLoader=(e.currentTarget as URLLoader);
				var result:String=urlLoader.data;
				
				if(!result) result="";
				else{
					var startPos:int=result.lastIndexOf("<textarea");
					if(startPos>=0){
						startPos=result.indexOf(">",startPos)+1;
						var endPos:int=result.indexOf("</textarea>",startPos);
						
						result=result.substr(startPos,endPos-startPos);
					}
				}
				
				_callback[0](result);
			}
			
			_path.splice(0,1);
			_params.splice(0,1);
			_callback.splice(0,1);
			
			next();
		}
		
		private function onError(e:IOErrorEvent):void{
			_isBusy=false;
			
			if(_callback[0]!=null){
				_callback[0](null);
			}
			
			_path.splice(0,1);
			_params.splice(0,1);
			_callback.splice(0,1);
			
			next();
		}
	}
}